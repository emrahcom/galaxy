#!/usr/bin/bash
set -e

BASEDIR=$(dirname $0)
TEMPLATES=$BASEDIR/../../templates
source $BASEDIR/../../../config
source $BASEDIR/../../common

[[ -z "$1" ]] && ID=1 || ID=$1
[[ -z "$2" ]] && IDX=1 || IDX=$2

SERVICE="pri"
CLASS="meeting/schedule"
ACTION="update"
ATTR="id"

# ------------------------------------------------------------------------------
# update with valid post
# ------------------------------------------------------------------------------
TAG="exist-once"

schedule_id=$(jq -r ".[0].id" \
    $TMP/api-pri-meeting-schedule-add-new-once-id-$ID-$IDX-res)
JSON=$(cat <<EOF
{
    "id": "$schedule_id",
    "name": "name-$RANDOM",
    "schedule_attr": {
      "type": "o",
      "started_at": "$(date -d "+3 hours" --iso-8601=minutes)",
      "duration": "30"
    }
}
EOF
)

bash $TEMPLATES/action-member-attr $ID $SERVICE $CLASS $ACTION $TAG $ATTR \
    "$JSON" $IDX

# ------------------------------------------------------------------------------
# update with valid post
# ------------------------------------------------------------------------------
TAG="exist-daily"

schedule_id=$(jq -r ".[0].id" \
    $TMP/api-pri-meeting-schedule-add-new-daily-id-$ID-$IDX-res)
JSON=$(cat <<EOF
{
    "id": "$schedule_id",
    "name": "name-$RANDOM",
    "schedule_attr": {
      "type": "d",
      "started_at": "$(date -d "+4 hours" --iso-8601=minutes)",
      "duration": "20",
      "rep_end_type": "x",
      "rep_end_x": "6",
      "rep_every": "3"
    }
}
EOF
)

bash $TEMPLATES/action-member-attr $ID $SERVICE $CLASS $ACTION $TAG $ATTR \
    "$JSON" $IDX

# ------------------------------------------------------------------------------
# update with valid post
# ------------------------------------------------------------------------------
TAG="exist-weekly"

schedule_id=$(jq -r ".[0].id" \
    $TMP/api-pri-meeting-schedule-add-new-weekly-id-$ID-$IDX-res)
JSON=$(cat <<EOF
{
    "id": "$schedule_id",
    "name": "name-$RANDOM",
    "schedule_attr": {
      "type": "w",
      "started_at": "$(date -d "+3 hours" --iso-8601=minutes)",
      "duration": "25",
      "rep_end_type": "at",
      "rep_end_at": "$(date -d "+60 days" --iso-8601=minutes)",
      "rep_every": "2",
      "rep_days": "0101000"
    }
}
EOF
)

bash $TEMPLATES/action-member-attr $ID $SERVICE $CLASS $ACTION $TAG $ATTR \
    "$JSON" $IDX
