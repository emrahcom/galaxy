#!/usr/bin/bash
set -e

# ------------------------------------------------------------------------------
# environment
# ------------------------------------------------------------------------------
BASEDIR=$(dirname $0)
source $BASEDIR/../../config
source $BASEDIR/../common

[[ -z "$1" ]] && ID=1 || ID=$1

header <<< "kratos registration (identity: $ID)"
rm -f $TMP/kratos-$ID-credential
rm -f $TMP/kratos-$ID-registration-*
rm -f $TMP/*.kratos-$ID.registration

# ------------------------------------------------------------------------------
# kratos registration flow
# ------------------------------------------------------------------------------
cookieJar=$(mktemp -p $TMP --suffix .kratos-$ID.registration)
echo $cookieJar >$TMP/kratos-$ID-registration-cookie

curl -ks https://$KRATOS_FQDN/self-service/registration/browser \
    --output-dir $TMP --output kratos-$ID-registration-flow \
    --cookie $cookieJar --cookie-jar $cookieJar \
    -H "Accept: application/json"
actionUrl=$(jq -r .ui.action $TMP/kratos-$ID-registration-flow)
csrfToken=$(jq -r \
    '.ui.nodes[] | select(.attributes.name=="csrf_token") | .attributes.value' \
    $TMP/kratos-$ID-registration-flow)

out <<< "flow, action URL:"
out <<< "  $actionUrl"
out <<< "flow, CSRF token:"
out <<< "  $csrfToken"

# ------------------------------------------------------------------------------
# kratos registration
# ------------------------------------------------------------------------------
cookieJar=$(cat $TMP/kratos-$ID-registration-cookie)
email=$(printf "user.%03d.$(date +%s)@galaxy.corp" $ID)
passwd=$(openssl rand -base64 12)

curl -ks -X POST "$actionUrl" \
    --output-dir $TMP --output kratos-$ID-registration-session \
    --cookie $cookieJar --cookie-jar $cookieJar \
    -H "Accept: application/json" \
    -H "Content-Type: application/json" \
    --data @- << EOF
    {
        "csrf_token": "$csrfToken",
        "traits.email": "$email",
        "password": "$passwd",
        "method": "password"
    }
EOF
userId=$(jq -r .identity.id $TMP/kratos-$ID-registration-session)
[[ -z "$userId" ]] && exit 1
[[ "$userId" = "null" ]] && exit 1

echo "email=$email" >$TMP/kratos-$ID-credential
echo "passwd=$passwd" >>$TMP/kratos-$ID-credential

out <<< "user id:"
out <<< "  $userId"
out <<< "email:"
out <<< "  $email"
out <<< "passwd:"
out <<< "  $passwd"

# ------------------------------------------------------------------------------
# completed
# ------------------------------------------------------------------------------
footer <<< "kratos registration (identity: $ID)"
