#!/usr/bin/bash
set -e

# ------------------------------------------------------------------------------
# environment
# ------------------------------------------------------------------------------
BASEDIR=$(dirname $0)
KRATOS="$BASEDIR/scripts/kratos"
ADM="$BASEDIR/scripts/adm"
PRI="$BASEDIR/scripts/pri"
PUB="$BASEDIR/scripts/pub"
START_TIME=$(date +%s)
source $BASEDIR/config
source $BASEDIR/scripts/common

for i in $(seq 1 12); do
  declare ID${i}=$i
done

# ------------------------------------------------------------------------------
# kratos
# ------------------------------------------------------------------------------
for i in $(seq 1 12); do
  bash $KRATOS/registration $i
  bash $KRATOS/login $i
done

# ------------------------------------------------------------------------------
# adm
# ------------------------------------------------------------------------------
bash $ADM/hello

# ------------------------------------------------------------------------------
# pri
# ------------------------------------------------------------------------------
bash $PRI/hello $ID1

# ------------------------------------------------------------------------------
# pri / profile
# ------------------------------------------------------------------------------
bash $PRI/profile/add-invalid $ID1
bash $PRI/profile/add-new $ID1 1
bash $PRI/profile/get-exist $ID1 1
bash $PRI/profile/get-none $ID1
bash $PRI/profile/get-default $ID1 1
bash $PRI/profile/add-exist $ID1 1

bash $PRI/profile/update-exist $ID1 1
bash $PRI/profile/update-none $ID1
bash $PRI/profile/update-invalid $ID1 1
bash $PRI/profile/del-exist $ID1 1
bash $PRI/profile/del-none $ID1

# add 10 additional profiles to ID1
for i in $(seq 1 10); do
  bash $PRI/profile/add-new $ID1 $i
  bash $PRI/profile/get-default $ID1 $i
done

# add an additional profile for every remaining identities
for i in $(seq 2 12); do
  ID=$i
  bash $PRI/profile/add-new $ID 1
  bash $PRI/profile/get-default $ID 1
done

bash $PRI/profile/set-default-exist $ID1 1
bash $PRI/profile/set-default-none $ID1
bash $PRI/profile/list-nolimit-nooffset $ID1
bash $PRI/profile/list-limit $ID1
bash $PRI/profile/list-limit-offset $ID1
bash $PRI/profile/list-huge-offset $ID1
bash $PRI/profile/list-invalid $ID1

bash $PRI/profile/add-new $ID2 1
bash $PRI/profile/get-default $ID2 1

# ------------------------------------------------------------------------------
# pri / domain
# ------------------------------------------------------------------------------
bash $PRI/domain/add-invalid $ID1
bash $PRI/domain/add-new $ID1 1
bash $PRI/domain/get-exist $ID1 1
bash $PRI/domain/get-none $ID1
bash $PRI/domain/add-exist $ID1 1

bash $PRI/domain/update-exist $ID1 1
bash $PRI/domain/update-none $ID1
bash $PRI/domain/update-invalid $ID1 1
bash $PRI/domain/disable-exist $ID1 1
bash $PRI/domain/disable-none $ID1
bash $PRI/domain/enable-exist $ID1 1
bash $PRI/domain/enable-none $ID1
bash $PRI/domain/del-exist $ID1 1
bash $PRI/domain/del-none $ID1

# add 10 domains for ID1
for i in $(seq 1 10); do
  bash $PRI/domain/add-new $ID1 $i
done

# add a domain for every remaining identities
for i in $(seq 2 12); do
  ID=$i
  bash $PRI/domain/add-new $ID 1
done

bash $PRI/domain/list-nolimit-nooffset $ID1
bash $PRI/domain/list-limit $ID1
bash $PRI/domain/list-limit-offset $ID1
bash $PRI/domain/list-huge-offset $ID1
bash $PRI/domain/list-invalid $ID1

# ------------------------------------------------------------------------------
# pri / domain-invite
# ------------------------------------------------------------------------------
bash $PRI/domain-invite/add-invalid $ID1
bash $PRI/domain-invite/add-new $ID1 1 1
bash $PRI/domain-invite/get-exist $ID1 1
bash $PRI/domain-invite/get-none $ID1
bash $PRI/domain-invite/get-bycode-exist $ID1 1
bash $PRI/domain-invite/get-bycode-none $ID1

bash $PRI/domain-invite/disable-exist $ID1 1
bash $PRI/domain-invite/disable-none $ID1
bash $PRI/domain-invite/enable-exist $ID1 1
bash $PRI/domain-invite/enable-none $ID1
bash $PRI/domain-invite/del-exist $ID1 1
bash $PRI/domain-invite/del-none $ID1

# add 20 domain-invites for ID1
for i in $(seq 1 20); do
  (( d = (i - 1) % 10 + 1 ))
  bash $PRI/domain-invite/add-new $ID1 $i $d
done

# add a domain-invite for every remaining identities
for i in $(seq 1 12); do
  ID=$i
  bash $PRI/domain-invite/add-new $ID 1 1
done

bash $PRI/domain-invite/list-bydomain-nolimit-nooffset $ID1 1
bash $PRI/domain-invite/list-bydomain-limit $ID1 1
bash $PRI/domain-invite/list-bydomain-huge-offset $ID1 1
bash $PRI/domain-invite/list-bydomain-invalid $ID1 1

# ------------------------------------------------------------------------------
# pri / domain-partnership
# ------------------------------------------------------------------------------
bash $PRI/domain-partnership/add-bycode-invalid $ID2
bash $PRI/domain-invite/get-exist $ID1 1
bash $PRI/domain-partnership/add-bycode-new $ID2 1 $ID1 1
bash $PRI/domain-partnership/get-exist $ID2 1
bash $PRI/domain-partnership/get-none $ID2
bash $PRI/domain-partnership/add-bycode-exist $ID2 1 $ID1 1
bash $PRI/domain-invite/enable-exist $ID1 1

bash $PRI/domain-partnership/del-exist $ID2 1
bash $PRI/domain-partnership/del-none $ID2

# share the first 10 domains with ID2
for i in $(seq 1 10); do
  bash $PRI/domain-invite/get-exist $ID1 $i
  bash $PRI/domain-partnership/add-bycode-new $ID2 $i $ID1 $i
done

# share one domain with every remaining identities
for i in $(seq 11 20); do
  (( ID = i - 8 ))
  bash $PRI/domain-invite/get-exist $ID1 $i
  bash $PRI/domain-partnership/add-bycode-new $ID 1 $ID1 $i
done

# every identity shares one domain with ID1
for i in $(seq 2 12); do
  ID=$i
  (( j = i - 1 ))
  bash $PRI/domain-invite/get-exist $ID 1
  bash $PRI/domain-partnership/add-bycode-new $ID1 $j $ID 1
done

# ------------------------------------------------------------------------------
# pri / domain-partner
# ------------------------------------------------------------------------------
bash $PRI/domain-partner/get-exist $ID1 1 $ID2 1
bash $PRI/domain-partner/get-none $ID1

bash $PRI/domain-partner/disable-exist $ID1 1 $ID2 1
bash $PRI/domain-partner/disable-none $ID1
bash $PRI/domain-partner/enable-exist $ID1 1 $ID2 1
bash $PRI/domain-partner/enable-none $ID1

bash $PRI/domain-partner/list-bydomain-nolimit-nooffset $ID1 1
bash $PRI/domain-partner/list-bydomain-limit $ID1 1
bash $PRI/domain-partner/list-bydomain-huge-offset $ID1 1
bash $PRI/domain-partner/list-bydomain-invalid $ID1 1

bash $PRI/domain-partner/del-exist $ID1 1 $ID2 1
bash $PRI/domain-partner/del-none $ID1

# ------------------------------------------------------------------------------
# pri / contact
# ------------------------------------------------------------------------------
bash $PRI/contact/list-nolimit-nooffset $ID1
bash $PRI/contact/list-limit $ID1
bash $PRI/contact/list-limit-offset $ID1
bash $PRI/contact/list-huge-offset $ID1
bash $PRI/contact/list-invalid $ID1

bash $PRI/contact/list-bydomain-nolimit-nooffset $ID1 1
bash $PRI/contact/list-bydomain-limit $ID1 1
bash $PRI/contact/list-bydomain-limit-offset $ID1 1
bash $PRI/contact/list-bydomain-huge-offset $ID1 1
bash $PRI/contact/list-bydomain-invalid $ID1 1

bash $PRI/contact/get-exist $ID1 1
bash $PRI/contact/get-none $ID1

bash $PRI/contact/update-exist $ID1 1
bash $PRI/contact/update-none $ID1
bash $PRI/contact/update-invalid $ID1
bash $PRI/contact/del-exist $ID1 1
bash $PRI/contact/del-none $ID1

# ------------------------------------------------------------------------------
# pri / domain-partner-candidate
# ------------------------------------------------------------------------------
# refresh the contact list. add-new uses this list.
bash $PRI/contact/list-nolimit-nooffset $ID1

for i in $(seq 1 10); do
  CONTACT=$i
  bash $PRI/domain-partner-candidate/add-new $ID1 $CONTACT 1
done

bash $PRI/domain-partner-candidate/add-invalid $ID1
bash $PRI/domain-partner-candidate/add-exist $ID1 2
bash $PRI/domain-partner-candidate/get-exist $ID1 2
bash $PRI/domain-partner-candidate/get-none $ID1
bash $PRI/domain-partner-candidate/del-exist $ID1 2
bash $PRI/domain-partner-candidate/del-none $ID1

bash $PRI/domain-partner-candidate/list-bydomain-nolimit-nooffset $ID1 1
bash $PRI/domain-partner-candidate/list-bydomain-limit $ID1 1
bash $PRI/domain-partner-candidate/list-bydomain-limit-offset $ID1 1
bash $PRI/domain-partner-candidate/list-bydomain-huge-offset $ID1 1
bash $PRI/domain-partner-candidate/list-bydomain-invalid $ID1 1

# ------------------------------------------------------------------------------
# pri / domain-partner-candidacy
# ------------------------------------------------------------------------------
bash $PRI/domain-partner-candidacy/list-nolimit-nooffset $ID1
bash $PRI/domain-partner-candidacy/list-limit $ID1
bash $PRI/domain-partner-candidacy/list-limit-offset $ID1
bash $PRI/domain-partner-candidacy/list-huge-offset $ID1
bash $PRI/domain-partner-candidacy/list-invalid $ID1

echo OK
exit

# ------------------------------------------------------------------------------
# pri / room
# ------------------------------------------------------------------------------
bash $PRI/room/add-invalid $ID1
bash $PRI/room/add-new $ID1 1 1
bash $PRI/room/get-exist $ID1 1
bash $PRI/room/get-none $ID1
bash $PRI/room/add-exist $ID1 1

bash $PRI/room/update-exist $ID1 1 1
bash $PRI/room/update-none $ID1
bash $PRI/room/update-invalid $ID1
bash $PRI/room/disable-exist $ID1 1
bash $PRI/room/disable-none $ID1
bash $PRI/room/enable-exist $ID1 1
bash $PRI/room/enable-none $ID1
bash $PRI/room/del-exist $ID1 1
bash $PRI/room/del-none $ID1

for i in $(seq 1 20); do
  (( d = (i - 1) % 10 + 1 ))
  bash $PRI/room/add-new $ID1 $i $d
  bash $PRI/room/add-ephemeral $ID1 $i $d
done

bash $PRI/room/list-nolimit-nooffset $ID1
bash $PRI/room/list-limit $ID1
bash $PRI/room/list-limit-offset $ID1
bash $PRI/room/list-huge-offset $ID1
bash $PRI/room/list-invalid $ID1

bash $PRI/room/get-link-exist $ID1 1
bash $PRI/room/get-link-none $ID1

# ------------------------------------------------------------------------------
# pri / room-invite
# ------------------------------------------------------------------------------
bash $PRI/room-invite/add-invalid $ID1
bash $PRI/room-invite/add-new $ID1 1 1
bash $PRI/room-invite/get-exist $ID1 1
bash $PRI/room-invite/get-none $ID1
bash $PRI/room-invite/get-bycode-exist $ID1 1
bash $PRI/room-invite/get-bycode-none $ID1

bash $PRI/room-invite/disable-exist $ID1 1
bash $PRI/room-invite/disable-none $ID1
bash $PRI/room-invite/enable-exist $ID1 1
bash $PRI/room-invite/enable-none $ID1
bash $PRI/room-invite/del-exist $ID1 1
bash $PRI/room-invite/del-none $ID1

for i in $(seq 1 20); do
  (( r = (i - 1) % 10 + 1 ))
  bash $PRI/room-invite/add-new $ID1 $i $r
done

bash $PRI/room-invite/list-byroom-nolimit-nooffset $ID1 1
bash $PRI/room-invite/list-byroom-limit $ID1 1
bash $PRI/room-invite/list-byroom-huge-offset $ID1 1
bash $PRI/room-invite/list-byroom-invalid $ID1 1

# ------------------------------------------------------------------------------
# pri / room-partnership
# ------------------------------------------------------------------------------
bash $PRI/room-partnership/add-bycode-invalid $ID2
bash $PRI/room-invite/get-exist $ID1 1
bash $PRI/room-partnership/add-bycode-new $ID2 1 $ID1 1
bash $PRI/room-partnership/get-exist $ID2 1
bash $PRI/room-partnership/get-none $ID2
bash $PRI/room-partnership/add-bycode-exist $ID2 1 $ID1 1
bash $PRI/room-invite/enable-exist $ID1 1

bash $PRI/room-partnership/del-exist $ID2 1
bash $PRI/room-partnership/del-none $ID2

# share the first 10 rooms with ID2
for i in $(seq 1 10); do
  bash $PRI/room-invite/get-exist $ID1 $i
  bash $PRI/room-partnership/add-bycode-new $ID2 $i $ID1 $i
done

# share a room with every remaining identities
for i in $(seq 11 20); do
  (( ID = i - 8 ))
  bash $PRI/room-invite/get-exist $ID1 $i
  bash $PRI/room-partnership/add-bycode-new $ID 1 $ID1 $i
done

# ------------------------------------------------------------------------------
# pri / room-partner
# ------------------------------------------------------------------------------
bash $PRI/room-partner/get-exist $ID1 1 $ID2 1
bash $PRI/room-partner/get-none $ID1

bash $PRI/room-partner/disable-exist $ID1 1 $ID2 1
bash $PRI/room-partner/disable-none $ID1
bash $PRI/room-partner/enable-exist $ID1 1 $ID2 1
bash $PRI/room-partner/enable-none $ID1

bash $PRI/room-partner/list-byroom-nolimit-nooffset $ID1 1
bash $PRI/room-partner/list-byroom-limit $ID1 1
bash $PRI/room-partner/list-byroom-huge-offset $ID1 1
bash $PRI/room-partner/list-byroom-invalid $ID1 1

bash $PRI/room-partner/del-exist $ID1 1 $ID2 1
bash $PRI/room-partner/del-none $ID1

# ------------------------------------------------------------------------------
# pri / meeting
# ------------------------------------------------------------------------------
bash $PRI/meeting/add-invalid $ID1
bash $PRI/meeting/add-new-permanent $ID1 1 1
bash $PRI/meeting/get-exist $ID1 1
bash $PRI/meeting/get-none $ID1

bash $PRI/meeting/update-exist $ID1 1
bash $PRI/meeting/update-none $ID1
bash $PRI/meeting/update-invalid $ID1
bash $PRI/meeting/disable-exist $ID1 1
bash $PRI/meeting/disable-none $ID1
bash $PRI/meeting/enable-exist $ID1 1
bash $PRI/meeting/enable-none $ID1
bash $PRI/meeting/del-exist $ID1 1
bash $PRI/meeting/del-none $ID1

for i in $(seq 1 20); do
  (( r = (i - 1) % 10 + 1 ))
  bash $PRI/meeting/add-new-permanent $ID1 $i $r
  bash $PRI/meeting/add-new-scheduled $ID1 $i $r
done

bash $PRI/meeting/list-nolimit-nooffset $ID1
bash $PRI/meeting/list-limit $ID1
bash $PRI/meeting/list-limit-offset $ID1
bash $PRI/meeting/list-huge-offset $ID1
bash $PRI/meeting/list-invalid $ID1

bash $PRI/meeting/get-link-exist $ID1 1
bash $PRI/meeting/get-link-none $ID1

# ------------------------------------------------------------------------------
# pri / meeting-invite
# ------------------------------------------------------------------------------
bash $PRI/meeting-invite/add-invalid $ID1
bash $PRI/meeting-invite/add-new-host-audience-of-permanent $ID1 1 1
bash $PRI/meeting-invite/add-new-guest-audience-of-permanent $ID1 1 1
bash $PRI/meeting-invite/add-new-host-member-of-permanent $ID1 1 1
bash $PRI/meeting-invite/add-new-guest-member-of-permanent $ID1 1 1
bash $PRI/meeting-invite/add-new-host-audience-of-scheduled $ID1 1 1
bash $PRI/meeting-invite/add-new-guest-audience-of-scheduled $ID1 1 1
bash $PRI/meeting-invite/add-new-host-member-of-scheduled $ID1 1 1
bash $PRI/meeting-invite/add-new-guest-member-of-scheduled $ID1 1 1
bash $PRI/meeting-invite/get-exist-host-member-of-permanent $ID1 1
bash $PRI/meeting-invite/get-exist-host-member-of-scheduled $ID1 1
bash $PRI/meeting-invite/get-exist-host-audience-of-permanent $ID1 1
bash $PRI/meeting-invite/get-exist-host-audience-of-scheduled $ID1 1
bash $PRI/meeting-invite/get-none $ID1
bash $PRI/meeting-invite/get-bycode-exist-host-member-of-permanent $ID1 1
bash $PRI/meeting-invite/get-bycode-exist-host-member-of-scheduled $ID1 1
bash $PRI/meeting-invite/get-bycode-none $ID1

bash $PRI/meeting-invite/disable-exist $ID1 1
bash $PRI/meeting-invite/disable-none $ID1
bash $PRI/meeting-invite/enable-exist $ID1 1
bash $PRI/meeting-invite/enable-none $ID1
bash $PRI/meeting-invite/del-exist $ID1 1
bash $PRI/meeting-invite/del-none $ID1

for i in $(seq 1 20); do
  (( m = (i - 1) % 10 + 1 ))
  bash $PRI/meeting-invite/add-new-host-audience-of-permanent $ID1 $i $m
  bash $PRI/meeting-invite/add-new-guest-audience-of-permanent $ID1 $i $m
  bash $PRI/meeting-invite/add-new-host-member-of-permanent $ID1 $i $m
  bash $PRI/meeting-invite/add-new-guest-member-of-permanent $ID1 $i $m
  bash $PRI/meeting-invite/add-new-host-audience-of-scheduled $ID1 $i $m
  bash $PRI/meeting-invite/add-new-guest-audience-of-scheduled $ID1 $i $m
  bash $PRI/meeting-invite/add-new-host-member-of-scheduled $ID1 $i $m
  bash $PRI/meeting-invite/add-new-guest-member-of-scheduled $ID1 $i $m
done

bash $PRI/meeting-invite/list-bymeeting-permanent-nolimit-nooffset $ID1 1
bash $PRI/meeting-invite/list-bymeeting-permanent-limit $ID1 1
bash $PRI/meeting-invite/list-bymeeting-permanent-huge-offset $ID1 1
bash $PRI/meeting-invite/list-bymeeting-permanent-invalid $ID1 1
bash $PRI/meeting-invite/list-bymeeting-scheduled-nolimit-nooffset $ID1 1
bash $PRI/meeting-invite/list-bymeeting-scheduled-limit $ID1 1
bash $PRI/meeting-invite/list-bymeeting-scheduled-huge-offset $ID1 1
bash $PRI/meeting-invite/list-bymeeting-scheduled-invalid $ID1 1

# ------------------------------------------------------------------------------
# pri / meeting-membership
# ------------------------------------------------------------------------------
bash $PRI/meeting-membership/add-bycode-invalid $ID2
bash $PRI/meeting-invite/get-exist-host-member-of-permanent $ID1 1
bash $PRI/meeting-membership/add-bycode-new-host-member-of-permanent \
  $ID2 1 $ID1 1
bash $PRI/meeting-membership/get-exist-host-member-of-permanent $ID2 1
bash $PRI/meeting-membership/get-none $ID2
bash $PRI/meeting-membership/add-bycode-exist $ID2 1 $ID1 1
bash $PRI/meeting-invite/enable-exist $ID1 1

bash $PRI/meeting-membership/update-exist $ID2 1
bash $PRI/meeting-membership/update-none $ID2
bash $PRI/meeting-membership/del-exist $ID2 1
bash $PRI/meeting-membership/del-none $ID2

# share the first 10 meetings with ID2
for i in $(seq 1 10); do
  bash $PRI/meeting-invite/get-exist-host-member-of-permanent $ID1 $i
  bash $PRI/meeting-membership/add-bycode-new-host-member-of-permanent \
    $ID2 $i $ID1 $i
  bash $PRI/meeting-invite/get-exist-host-member-of-scheduled $ID1 $i
  bash $PRI/meeting-membership/add-bycode-new-host-member-of-scheduled \
    $ID2 $i $ID1 $i
done

# share a meeting with every remaining identities
for i in $(seq 11 20); do
  (( ID = i - 8 ))
  bash $PRI/meeting-invite/get-exist-host-member-of-permanent $ID1 $i
  bash $PRI/meeting-membership/add-bycode-new-host-member-of-permanent \
    $ID 1 $ID1 $i
  bash $PRI/meeting-invite/get-exist-host-member-of-scheduled $ID1 $i
  bash $PRI/meeting-membership/add-bycode-new-host-member-of-scheduled \
    $ID 1 $ID1 $i
done

# ------------------------------------------------------------------------------
# pri / meeting-member
# ------------------------------------------------------------------------------
bash $PRI/meeting-member/get-exist $ID1 1 $ID2 1
bash $PRI/meeting-member/get-none $ID1

bash $PRI/meeting-member/list-bymeeting-nolimit-nooffset $ID1 1
bash $PRI/meeting-member/list-bymeeting-limit $ID1 1
bash $PRI/meeting-member/list-bymeeting-huge-offset $ID1 1
bash $PRI/meeting-member/list-bymeeting-invalid $ID1 1

bash $PRI/meeting-member/disable-exist $ID1 1 $ID2 1
bash $PRI/meeting-member/disable-none $ID1
bash $PRI/meeting-member/enable-exist $ID1 1 $ID2 1
bash $PRI/meeting-member/enable-none $ID1
bash $PRI/meeting-member/set-guest-exist $ID1 1 $ID2 1
bash $PRI/meeting-member/set-guest-none $ID1
bash $PRI/meeting-member/set-host-exist $ID1 1 $ID2 1
bash $PRI/meeting-member/set-host-none $ID1
bash $PRI/meeting-member/del-exist $ID1 1 $ID2 1
bash $PRI/meeting-member/del-none $ID1

# ------------------------------------------------------------------------------
# pri / meeting-request
# ------------------------------------------------------------------------------
bash $PRI/meeting-request/add-invalid $ID2
bash $PRI/meeting-request/add-new $ID2 1 $ID1 1
bash $PRI/meeting-request/get-exist $ID2 1
bash $PRI/meeting-request/get-none $ID2
bash $PRI/meeting-request/add-exist-request $ID2 1
bash $PRI/meeting-request/add-exist-membership $ID2 1

bash $PRI/meeting-request/update-exist $ID2 1
bash $PRI/meeting-request/update-none $ID2
bash $PRI/meeting-request/update-invalid $ID2
bash $PRI/meeting-request/del-exist $ID2 1
bash $PRI/meeting-request/del-none $ID2

bash $PRI/meeting-request/drop-none $ID1
bash $PRI/meeting-request/add-new $ID2 1 $ID1 1
bash $PRI/meeting-request/drop-exist $ID1 1 $ID2 1

bash $PRI/meeting-request/reject-none $ID1
bash $PRI/meeting-request/add-new $ID2 1 $ID1 1
bash $PRI/meeting-request/reject-exist $ID1 1 $ID2 1
bash $PRI/meeting-request/drop-exist $ID1 1 $ID2 1

bash $PRI/meeting-request/accept-none $ID1
bash $PRI/meeting-request/add-new $ID2 1 $ID1 1
bash $PRI/meeting-request/accept-exist $ID1 1 $ID2 1

for i in $(seq 1 10); do
  bash $PRI/meeting/add-new-permanent $ID1 $i
  bash $PRI/meeting-request/add-new $ID2 $i $ID1 $i
done

bash $PRI/meeting-request/list-nolimit-nooffset $ID2
bash $PRI/meeting-request/list-limit $ID2
bash $PRI/meeting-request/list-limit-offset $ID2
bash $PRI/meeting-request/list-huge-offset $ID2
bash $PRI/meeting-request/list-invalid $ID2

# ------------------------------------------------------------------------------
# pri / meeting-schedule
# ------------------------------------------------------------------------------
bash $PRI/meeting-schedule/add-invalid $ID1
bash $PRI/meeting-schedule/add-new $ID1
bash $PRI/meeting-schedule/get-exist $ID1 1
bash $PRI/meeting-schedule/get-none $ID1

bash $PRI/meeting-schedule/update-exist $ID1 1
bash $PRI/meeting-schedule/update-none $ID1
bash $PRI/meeting-schedule/update-invalid $ID1
bash $PRI/meeting-schedule/del-exist $ID1 1
bash $PRI/meeting-schedule/del-none $ID1

for i in $(seq 1 10); do
  bash $PRI/meeting-schedule/add-new $ID1 $i
done

bash $PRI/meeting-schedule/list-bymeeting-nolimit-nooffset $ID1 1
bash $PRI/meeting-schedule/list-bymeeting-limit $ID1 1
bash $PRI/meeting-schedule/list-bymeeting-huge-offset $ID1 1
bash $PRI/meeting-schedule/list-bymeeting-invalid $ID1 1

bash $PRI/meeting-schedule/get-bymeeting-exist $ID1 1
bash $PRI/meeting-schedule/get-bymeeting-none $ID1
bash $PRI/meeting-schedule/get-bymembership-exist $ID2 1
bash $PRI/meeting-schedule/get-bymembership-none $ID2

# ------------------------------------------------------------------------------
# pri / meeting (stage 2)
# ------------------------------------------------------------------------------
bash $PRI/meeting/get-link-bymembership-exist-host-member-of-permanent $ID2 2
bash $PRI/meeting/get-link-bymembership-exist-host-member-of-scheduled $ID2 2
bash $PRI/meeting/get-link-bymembership-none $ID2

# ------------------------------------------------------------------------------
# pub
# ------------------------------------------------------------------------------
bash $PUB/hello

# ------------------------------------------------------------------------------
# pub / meeting
# ------------------------------------------------------------------------------
bash $PUB/meeting/get-exist
bash $PUB/meeting/get-none

bash $PRI/meeting-invite/add-new-host-audience-of-permanent $ID1
bash $PRI/meeting-invite/get-exist-host-audience-of-permanent $ID1
bash $PUB/meeting/get-link-bycode-exist
bash $PUB/meeting/get-link-bycode-none

bash $PUB/meeting/list-nolimit-nooffset
bash $PUB/meeting/list-limit
bash $PUB/meeting/list-limit-offset
bash $PUB/meeting/list-huge-offset
bash $PUB/meeting/list-invalid

# ------------------------------------------------------------------------------
# pub / meeting-schedule
# ------------------------------------------------------------------------------
bash $PRI/meeting-invite/add-new-host-audience-of-scheduled $ID1
bash $PRI/meeting-invite/get-exist-host-audience-of-scheduled $ID1
bash $PUB/meeting-schedule/get-bycode-exist
bash $PUB/meeting-schedule/get-bycode-none

# ------------------------------------------------------------------------------
# completed
# ------------------------------------------------------------------------------
END_TIME=$(date +%s)
DURATION=$(date -u -d "0 $END_TIME seconds - $START_TIME seconds" +"%H:%M:%S")

footer <<< "duration: $DURATION"
footer <<< "completed successfully"
